def buildAndPushImage(regionName, gitUrl, ecrUrl, rawImageName, rawImageTag, buildId) {
  def imageTag  = "${rawImageTag}.${buildId}"
  def imageName = "${ecrUrl}/${rawImageName}:${imageTag}"
  git(gitUrl)
  sh """
    aws ecr get-login-password --region ${regionName} | \
    docker login --username AWS --password-stdin ${ecrUrl}
    docker build -t ${imageName} .
    docker push ${imageName}
  """
}

def applyTerraformUpdates(accountId, regionName, projectName, environmentName) {
  def bucketName = "${accountId}-${projectName}-${environmentName}-terraform-state"
  def tableName  = "${accountId}-${projectName}-${environmentName}-terraform-lock"
  git("https://github.com/alfpedraza-aws-devops/infrastructure")
  withCredentials([usernamePassword(
  credentialsId: "aws_credentials",
  usernameVariable: "AWS_ACCESS_KEY_ID",
  passwordVariable: "AWS_SECRET_ACCESS_KEY")]) {
    sh """
      cd ./${environmentName}
      terraform init \
        -input=false \
        -backend-config="bucket=${bucketName}" \
        -backend-config="key=terraform.tfstate" \
        -backend-config="region=${regionName}" \
        -backend-config="dynamodb_table=${tableName}" \
        -backend-config="encrypt=true"
      terraform apply \
        -input=false \
        -lock=true \
        -auto-approve \
        -var "account_id=${accountId}" \
        -var "region_name=${regionName}" \
        -var "project_name=${projectName}"
    """
  }
}

def deployApp(accountId, regionName, projectName, environmentName) {
  def bucketName = "${accountId}-${projectName}-private-${environmentName}-master"
  git("https://github.com/alfpedraza-aws-devops/deployment")
  sh """
    cd ./helm
    aws s3 cp s3://${bucketName}/admin.conf ./admin.conf --region ${regionName}
    helm upgrade \
      --install \
      --wait --timeout 300 \
      --kubeconfig ./admin.conf \
      ${projectName} ./aws-devops
  """
}

node {

  stage("Build Fibonacci") {
    buildAndPushImage(
      /* regionName   */ params.REGION_NAME,
      /* gitUrl       */ "https://github.com/alfpedraza-aws-devops/fibonacci",
      /* ecrUrl       */ params.ECR_URL,
      /* rawImageName */ "aws-devops-fibonacci",
      /* rawImageTag  */ "0.1.4",
      /* buildId      */ env.BUILD_ID)
  }

  stage("Build Kubernetes API") {
    buildAndPushImage(
      /* regionName   */ params.REGION_NAME,
      /* gitUrl       */ "https://github.com/alfpedraza-aws-devops/kubernetes-api",
      /* ecrUrl       */ params.ECR_URL,
      /* rawImageName */ "aws-devops-kubernetes-api",
      /* rawImageTag  */ "0.1.11",
      /* buildId      */ env.BUILD_ID)
  }

  stage("Build Web UI") {
    buildAndPushImage(
      /* regionName   */ params.REGION_NAME,
      /* gitUrl       */ "https://github.com/alfpedraza-aws-devops/web-ui",
      /* ecrUrl       */ params.ECR_URL,
      /* rawImageName */ "aws-devops-web-ui",
      /* rawImageTag  */ "0.1.4",
      /* buildId      */ env.BUILD_ID)
  }

  stage("Update VPC") {
    applyTerraformUpdates(
      /* accountId       */ params.ACCOUNT_ID,
      /* regionName      */ params.REGION_NAME,
      /* projectName     */ params.PROJECT_NAME,
      /* environmentName */ "vpc")
  }

  stage("Update DEV environment") {
    applyTerraformUpdates(
      /* accountId       */ params.ACCOUNT_ID,
      /* regionName      */ params.REGION_NAME,
      /* projectName     */ params.PROJECT_NAME,
      /* environmentName */ "dev")
  }

  stage("Deploy to DEV environment") {
    deployApp(
      /* accountId       */ params.ACCOUNT_ID,
      /* regionName      */ params.REGION_NAME,
      /* projectName     */ params.PROJECT_NAME,
      /* environmentName */ "dev")
  }

  stage("Update PROD environment") {
    input "Deploy to PROD?"
    applyTerraformUpdates(
      /* accountId       */ params.ACCOUNT_ID,
      /* regionName      */ params.REGION_NAME,
      /* projectName     */ params.PROJECT_NAME,
      /* environmentName */ "prod")
  }

  stage("Deploy to PROD environment") {
    deployApp(
      /* accountId       */ params.ACCOUNT_ID,
      /* regionName      */ params.REGION_NAME,
      /* projectName     */ params.PROJECT_NAME,
      /* environmentName */ "prod")
  }
  
}